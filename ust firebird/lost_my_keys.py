from Cryptodome.Util.number import bytes_to_long,long_to_bytes
from gmpy2 import *
import base64
import sys
from pwn import *
import binascii
from Cryptodome.PublicKey import RSA
# from secret import flag
key=[]
cipher=[]





# for i in range(17):
#     r = remote("chal.firebird.sh","35038")
#     m0 = str(r.recvline())[2:-5]
#     m1 = str(r.recvline())[2:-5]
#     m2 = str(r.recvline())[2:-5]
#     m3 = str(r.recvline())[2:-5]
#     m4 = str(r.recvline())[2:-5]
#     m5 = str(r.recvline())[2:-5]
#     m6 = str(r.recvline())[2:-5]
#     m7 = str(r.recvline())[2:-5]
#     m8 = str(r.recvline())[2:-5]


#     pub = None
#     k = m0+'\n'+m1+m2+m3+m4+m5+m6+m7+'\n'+m8
#     pub = RSA.import_key(extern_key=k)
#     key.append(pub.n)


#     r.recvline()

#     # # r.recvline()
#     #     # key.append(k)
#     a = int(r.recvline().decode()[22:])
#     cipher.append(a)
#     # print(a)
#     # print("\n")

#     # print(k)
#     # print()

# print(key)
# print(cipher)












# print(len(base64.b64decode(m1)))








sys.set_int_max_str_digits(1200000)

# for i in" range(16):
#     for j in range(i+1,15):
#         if(math.gcd(key[i],key[j])!=1):
#             print(i,j)
#             # print(key[i])
#             # print(key[j])
#             print(math.gcd(key[i],key[j]))


            



# print(cipher))))

# print(long_to_bytes

# gmpy2.
# print(sys.get_int_max_str_digits())
flag = '1021483986479003488496356932406296852478421159055146446368146510790599272275719038749046720949237818539173851663384159088102926923755803165242087965498738701480455504480333426065508110029604864246071469017047254014933659038598794780888543997268802056340231865159571944147338430775178740018726946778330198914539724285289378376362439615119500304854876651227876887383347295010131417477621673099600720229189332824517943918811296173125336557140769879065259144358080266061501873240815359621608382617415197591383362734466453735038807868601287358574451631626461447312845385843146147799628731455095198639451629953525423234462581953909158654454389875628647302604127147092287130524297867715235524817412604913919957913701387032994588918046298703089268604541388243834182475622461506935143475857267524898380564570576545507144066174757836522405325879513993753713103635481939388745406750568948003303055671404616500407701582257388355839547008758910138708996434126342169117860423315884048497502218919389608770575059120099614556318603425903561993982019868830679346024395064940266107271992288360501499273538981648724495448051166163683232762670853412271634145746318662603541656823021545161487627559109055876863022812089814152157972252451013850895009374249823829455677226068753862793785952894667791601768645249729834405560388358030959525012754983995272125053038906321842740128162410594897498986868654505157492560481091400649644680982263555932857492728880113035356443939785480525086817917617243573038184338354528646884837126187194799619127695507829661578045154176922489093489847687765549233076649043601067744834398654588576530626398552474411293558012819989742317593679645282980191675107970937772610027417984436514646206682489198295371233270286173603611545854369128657391427975547780093718323865767584248024802265494908568838302093585575503560417549909028242598608810626210543231036672580707520494426982220910045732780039830865067353332565702721884730004888874534094793316485560544180297870484542955745750399655381059234974955953655235180508862579155932178224769204837562401879143183553634767632614428165879920037578084852431297288111034590126978383532864747285138176670203840401641419799601955025367039921090162288440641950800851059819291398101475180582016401951265259805271203461049590623287887735994131975583508139208512772758400551534769117111413863345190933970402270638364670630942444476393842215790742377591687116337156187800741057818290434810581632906104569239728301809297700602374445438808872955293821262070800887595330870203845310385983440114412207382010396415281771620275961490163092669312752743520714397456617731683777419171722686454477035032695208734805772703329822138351038894510077836944148984446281303837316604864326545965140895392695885462326830930400887045697440587691971848199327679827622651667053011729925017443316263395840327836911096453654064063936880455532277211621349451517457358258228158289267808234294998524812451248835982180582461702610171140130384161962604963209504203888571160553215584147334282241202264961638517366017701300968496121185377525575862666885971734513084986970213774463736151707624964597240607760620050969065037982072057152166017165168593747420922624037769357020681924669372652548127953901794734959993416095390083063349796557241715211995008227053481332483893345757844578036618449440632858077313551851306139011690384143351989323600665145416927687003536725973964021240960253868590651688440249952931848902442129651952456017139291923023538696910171716722038453862890895989526154590759154506937742956844002409487403158933151425923993506051382017280367018491829303850970499261261413736140114074355501409990105860236831214670803329048189159531918297502416299025545212097340553483030169585665476159436354905382942224818066790177179641236164597169407508462889321714436945446536855721554710890850784372386548381357758098336432772443573968163226796627755882319038733272631374496554164373000273908353594642175094925235112865690872031378953365558983608262044981556253275136563074617349304648770043870176142718599043333118543647732083968026651718353696059296945943517179875078459927145359817451857437899459207412323177766123397237410638543117928287494253638158135245431958130684269995524901589445156669634197625669980758355949055904177182313718355329559719275689118952721374623005521618876781852605354283853662693879856920823901144922163996138815410742445443447904438103677176043396004303141445914264217428599725284238578452997516127564364420702907958722583396798820343284958209683797371289115115111804762411565109488269328038394099895482475152858216390793089966545494450264309294771672100406296893375826324028081113849172575843217983004899511718723080294781233973889266996463543193669951079586378490723895456114443652783950477887299167680925489660521953556430932186904991616878745163297023536223020330539965984085350411908193432851503012620492190023296403564488246982366796798197031366156186371515910266041577803624007285410071263194715655071516814474618718586561958608343408738769181516645285726407139256169626549283754133693903693544510865611776306572153266151104252807188745996016062817210348893044819027541754305302892374571374189539881980189172699860456736816866394426261592272422688353017426780254792591764858743390427778550262621477259814806958113633308772109369010085604835381738634001595160355716788003105442170986241822498151370458048941645133570588868114087819892755518004244437698496876781840296720057405352355770187515568541173457240780883375912261310012303965519141547457199253103205604805389560455705892226860105142821486193175511248175697512236118841119012628071663117150280488433633396202727705975671102220857862373140469633845152931387388662376082079130724265068878721005322120174549348919750748608494133301921119356149637760900008851679007139032376296289538999767874695180736396268314560148057901994859805077430997152852129319922657833022132950619890393420470242936125407840577774610868231841558231082738058411903918503264382242076948139734270472754229077378169590012984525539272003322254434341596923833259083587147208045184027468143470176241927996947966653206600413264755591523800021707196320349567720098254626057401030653704526771760483121921194996809418849309422004049468923708092571208828747861789464393535734724938459108292828579627719359231701830329362284107249224822226664589213298948763958528611695241964571794116463060764455208737088722544752233961636532028458289060198183508378105244977871225149538616582686483827040670771937075115840763037988094026094669945220469900556779909923323981376264569611775387622173336832413775412070058959568518062234720405148354627497131454804064762326528780020583253508338098888468667509962808090916502433890451611101934475370175965558794443560745000840545642315073740875874404840751129800957254103416594717507708902131036167047079589438085270284826879848659554043022330264077633097083350135732162508383016663847868012409389925358923929280929818420760386480754375935104479125085798651523682416614804492944494240514666557970763487930461448350421537439308069796836601019557499983266253384576315138063880182448431841379752524476569510741210821712734744547294510018829507414978537177502204219493895789256931199345049419603476081013463492666335530926252184242827000032865115676032606151761768541792492127796236595904774144'


# print(int(flag)%key[0])


# # # print(base64.b64encode(flag))
flag=(gmpy2.iroot(int(flag),17))
print(flag)
print(long_to_bytes(int(flag[0])))


# print(long_to_bytes(2821790122727647951869850227075963905101819413147445057853426661448651283518953421769779727775104141624074487595254171288907111292693797537976398737138384499306838221723492317176135705789460933273745963102825136047915077219239828317797135592839367941751937326997793678970227144089191722111728876889353415459669535925555664025179927201119033094349362507555179461316356511491263286587893243657604548389672983512516913802765910209596397432482540532971148057041140875067587753995955622205661478303558770246933121487583996867952606675791015046634426786057493359784222223698019183793697329975526112045147599392875849324403885457348265396999466330739694357682834396006481314632543736825952573505345365845369322))

# print(binascii.unhexlify(hex(flag[0])))
# flag = pow(flag,1/17)